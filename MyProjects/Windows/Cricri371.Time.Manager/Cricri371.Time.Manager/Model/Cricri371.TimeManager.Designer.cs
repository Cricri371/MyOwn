//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Métadonnées de relation EDM

[assembly: EdmRelationshipAttribute("Cricri371TimeManagerModel", "FK_Application_CompanyID", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cricri371.Time.Manager.Model.Companies), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cricri371.Time.Manager.Model.Applications), true)]
[assembly: EdmRelationshipAttribute("Cricri371TimeManagerModel", "FK_Project_ApplicationID", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cricri371.Time.Manager.Model.Applications), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cricri371.Time.Manager.Model.Projects), true)]
[assembly: EdmRelationshipAttribute("Cricri371TimeManagerModel", "FK_TLTP_ProjectID", "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cricri371.Time.Manager.Model.Projects), "TaskLinkedToProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cricri371.Time.Manager.Model.TaskLinkedToProject), true)]
[assembly: EdmRelationshipAttribute("Cricri371TimeManagerModel", "FK_PassedTime_TaskLinkedToProjectID", "TaskLinkedToProject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cricri371.Time.Manager.Model.TaskLinkedToProject), "PassedTimes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cricri371.Time.Manager.Model.PassedTimes), true)]
[assembly: EdmRelationshipAttribute("Cricri371TimeManagerModel", "FK_TLP_TaskID", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cricri371.Time.Manager.Model.Tasks), "TaskLinkedToProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cricri371.Time.Manager.Model.TaskLinkedToProject), true)]

#endregion

namespace Cricri371.Time.Manager.Model
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class Cricri371TimeManagerEntities : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet Cricri371TimeManagerEntities à l'aide de la chaîne de connexion trouvée dans la section 'Cricri371TimeManagerEntities' du fichier de configuration d'application.
        /// </summary>
        public Cricri371TimeManagerEntities() : base("name=Cricri371TimeManagerEntities", "Cricri371TimeManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet Cricri371TimeManagerEntities.
        /// </summary>
        public Cricri371TimeManagerEntities(string connectionString) : base(connectionString, "Cricri371TimeManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet Cricri371TimeManagerEntities.
        /// </summary>
        public Cricri371TimeManagerEntities(EntityConnection connection) : base(connection, "Cricri371TimeManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Applications> Application
        {
            get
            {
                if ((_Application == null))
                {
                    _Application = base.CreateObjectSet<Applications>("Application");
                }
                return _Application;
            }
        }
        private ObjectSet<Applications> _Application;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Companies> Company
        {
            get
            {
                if ((_Company == null))
                {
                    _Company = base.CreateObjectSet<Companies>("Company");
                }
                return _Company;
            }
        }
        private ObjectSet<Companies> _Company;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<PassedTimes> PassedTime
        {
            get
            {
                if ((_PassedTime == null))
                {
                    _PassedTime = base.CreateObjectSet<PassedTimes>("PassedTime");
                }
                return _PassedTime;
            }
        }
        private ObjectSet<PassedTimes> _PassedTime;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Projects> Project
        {
            get
            {
                if ((_Project == null))
                {
                    _Project = base.CreateObjectSet<Projects>("Project");
                }
                return _Project;
            }
        }
        private ObjectSet<Projects> _Project;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Tasks> Task
        {
            get
            {
                if ((_Task == null))
                {
                    _Task = base.CreateObjectSet<Tasks>("Task");
                }
                return _Task;
            }
        }
        private ObjectSet<Tasks> _Task;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<TaskLinkedToProject> TaskLinkedToProject
        {
            get
            {
                if ((_TaskLinkedToProject == null))
                {
                    _TaskLinkedToProject = base.CreateObjectSet<TaskLinkedToProject>("TaskLinkedToProject");
                }
                return _TaskLinkedToProject;
            }
        }
        private ObjectSet<TaskLinkedToProject> _TaskLinkedToProject;

        #endregion

        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Application. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToApplication(Applications applications)
        {
            base.AddObject("Application", applications);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Company. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToCompany(Companies companies)
        {
            base.AddObject("Company", companies);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet PassedTime. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToPassedTime(PassedTimes passedTimes)
        {
            base.AddObject("PassedTime", passedTimes);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Project. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToProject(Projects projects)
        {
            base.AddObject("Project", projects);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Task. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToTask(Tasks tasks)
        {
            base.AddObject("Task", tasks);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet TaskLinkedToProject. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToTaskLinkedToProject(TaskLinkedToProject taskLinkedToProject)
        {
            base.AddObject("TaskLinkedToProject", taskLinkedToProject);
        }

        #endregion

    }

    #endregion

    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cricri371TimeManagerModel", Name="Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Applications : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Applications.
        /// </summary>
        /// <param name="iD_Application">Valeur initiale de la propriété ID_Application.</param>
        /// <param name="iD_Company">Valeur initiale de la propriété ID_Company.</param>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        public static Applications CreateApplications(global::System.Int32 iD_Application, global::System.Int32 iD_Company, global::System.String name)
        {
            Applications applications = new Applications();
            applications.ID_Application = iD_Application;
            applications.ID_Company = iD_Company;
            applications.Name = name;
            return applications;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Application
        {
            get
            {
                return _ID_Application;
            }
            set
            {
                if (_ID_Application != value)
                {
                    OnID_ApplicationChanging(value);
                    ReportPropertyChanging("ID_Application");
                    _ID_Application = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_Application");
                    OnID_ApplicationChanged();
                }
            }
        }
        private global::System.Int32 _ID_Application;
        partial void OnID_ApplicationChanging(global::System.Int32 value);
        partial void OnID_ApplicationChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Company
        {
            get
            {
                return _ID_Company;
            }
            set
            {
                OnID_CompanyChanging(value);
                ReportPropertyChanging("ID_Company");
                _ID_Company = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Company");
                OnID_CompanyChanged();
            }
        }
        private global::System.Int32 _ID_Company;
        partial void OnID_CompanyChanging(global::System.Int32 value);
        partial void OnID_CompanyChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cricri371TimeManagerModel", "FK_Application_CompanyID", "Company")]
        public Companies Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("Cricri371TimeManagerModel.FK_Application_CompanyID", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("Cricri371TimeManagerModel.FK_Application_CompanyID", "Company").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Companies> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("Cricri371TimeManagerModel.FK_Application_CompanyID", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Companies>("Cricri371TimeManagerModel.FK_Application_CompanyID", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cricri371TimeManagerModel", "FK_Project_ApplicationID", "Project")]
        public EntityCollection<Projects> Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Projects>("Cricri371TimeManagerModel.FK_Project_ApplicationID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Projects>("Cricri371TimeManagerModel.FK_Project_ApplicationID", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cricri371TimeManagerModel", Name="Companies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Companies : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Companies.
        /// </summary>
        /// <param name="iD_Company">Valeur initiale de la propriété ID_Company.</param>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        public static Companies CreateCompanies(global::System.Int32 iD_Company, global::System.String name)
        {
            Companies companies = new Companies();
            companies.ID_Company = iD_Company;
            companies.Name = name;
            return companies;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Company
        {
            get
            {
                return _ID_Company;
            }
            set
            {
                if (_ID_Company != value)
                {
                    OnID_CompanyChanging(value);
                    ReportPropertyChanging("ID_Company");
                    _ID_Company = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_Company");
                    OnID_CompanyChanged();
                }
            }
        }
        private global::System.Int32 _ID_Company;
        partial void OnID_CompanyChanging(global::System.Int32 value);
        partial void OnID_CompanyChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cricri371TimeManagerModel", "FK_Application_CompanyID", "Application")]
        public EntityCollection<Applications> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Applications>("Cricri371TimeManagerModel.FK_Application_CompanyID", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Applications>("Cricri371TimeManagerModel.FK_Application_CompanyID", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cricri371TimeManagerModel", Name="PassedTimes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PassedTimes : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet PassedTimes.
        /// </summary>
        /// <param name="iD_PassedTime">Valeur initiale de la propriété ID_PassedTime.</param>
        /// <param name="startDateTime">Valeur initiale de la propriété StartDateTime.</param>
        /// <param name="endDateTime">Valeur initiale de la propriété EndDateTime.</param>
        /// <param name="iD_TaskLinkedToProject">Valeur initiale de la propriété ID_TaskLinkedToProject.</param>
        public static PassedTimes CreatePassedTimes(global::System.Int32 iD_PassedTime, global::System.DateTime startDateTime, global::System.DateTime endDateTime, global::System.Int32 iD_TaskLinkedToProject)
        {
            PassedTimes passedTimes = new PassedTimes();
            passedTimes.ID_PassedTime = iD_PassedTime;
            passedTimes.StartDateTime = startDateTime;
            passedTimes.EndDateTime = endDateTime;
            passedTimes.ID_TaskLinkedToProject = iD_TaskLinkedToProject;
            return passedTimes;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_PassedTime
        {
            get
            {
                return _ID_PassedTime;
            }
            set
            {
                if (_ID_PassedTime != value)
                {
                    OnID_PassedTimeChanging(value);
                    ReportPropertyChanging("ID_PassedTime");
                    _ID_PassedTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_PassedTime");
                    OnID_PassedTimeChanged();
                }
            }
        }
        private global::System.Int32 _ID_PassedTime;
        partial void OnID_PassedTimeChanging(global::System.Int32 value);
        partial void OnID_PassedTimeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private global::System.DateTime _EndDateTime;
        partial void OnEndDateTimeChanging(global::System.DateTime value);
        partial void OnEndDateTimeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_TaskLinkedToProject
        {
            get
            {
                return _ID_TaskLinkedToProject;
            }
            set
            {
                OnID_TaskLinkedToProjectChanging(value);
                ReportPropertyChanging("ID_TaskLinkedToProject");
                _ID_TaskLinkedToProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_TaskLinkedToProject");
                OnID_TaskLinkedToProjectChanged();
            }
        }
        private global::System.Int32 _ID_TaskLinkedToProject;
        partial void OnID_TaskLinkedToProjectChanging(global::System.Int32 value);
        partial void OnID_TaskLinkedToProjectChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cricri371TimeManagerModel", "FK_PassedTime_TaskLinkedToProjectID", "TaskLinkedToProject")]
        public TaskLinkedToProject TaskLinkedToProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskLinkedToProject>("Cricri371TimeManagerModel.FK_PassedTime_TaskLinkedToProjectID", "TaskLinkedToProject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskLinkedToProject>("Cricri371TimeManagerModel.FK_PassedTime_TaskLinkedToProjectID", "TaskLinkedToProject").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskLinkedToProject> TaskLinkedToProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskLinkedToProject>("Cricri371TimeManagerModel.FK_PassedTime_TaskLinkedToProjectID", "TaskLinkedToProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskLinkedToProject>("Cricri371TimeManagerModel.FK_PassedTime_TaskLinkedToProjectID", "TaskLinkedToProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cricri371TimeManagerModel", Name="Projects")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Projects : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Projects.
        /// </summary>
        /// <param name="iD_Project">Valeur initiale de la propriété ID_Project.</param>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        /// <param name="shortName">Valeur initiale de la propriété ShortName.</param>
        /// <param name="iD_Application">Valeur initiale de la propriété ID_Application.</param>
        public static Projects CreateProjects(global::System.Int32 iD_Project, global::System.String name, global::System.String shortName, global::System.Int32 iD_Application)
        {
            Projects projects = new Projects();
            projects.ID_Project = iD_Project;
            projects.Name = name;
            projects.ShortName = shortName;
            projects.ID_Application = iD_Application;
            return projects;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Project
        {
            get
            {
                return _ID_Project;
            }
            set
            {
                if (_ID_Project != value)
                {
                    OnID_ProjectChanging(value);
                    ReportPropertyChanging("ID_Project");
                    _ID_Project = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_Project");
                    OnID_ProjectChanged();
                }
            }
        }
        private global::System.Int32 _ID_Project;
        partial void OnID_ProjectChanging(global::System.Int32 value);
        partial void OnID_ProjectChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Application
        {
            get
            {
                return _ID_Application;
            }
            set
            {
                OnID_ApplicationChanging(value);
                ReportPropertyChanging("ID_Application");
                _ID_Application = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Application");
                OnID_ApplicationChanged();
            }
        }
        private global::System.Int32 _ID_Application;
        partial void OnID_ApplicationChanging(global::System.Int32 value);
        partial void OnID_ApplicationChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cricri371TimeManagerModel", "FK_Project_ApplicationID", "Application")]
        public Applications Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Applications>("Cricri371TimeManagerModel.FK_Project_ApplicationID", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Applications>("Cricri371TimeManagerModel.FK_Project_ApplicationID", "Application").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Applications> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Applications>("Cricri371TimeManagerModel.FK_Project_ApplicationID", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Applications>("Cricri371TimeManagerModel.FK_Project_ApplicationID", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cricri371TimeManagerModel", "FK_TLTP_ProjectID", "TaskLinkedToProject")]
        public EntityCollection<TaskLinkedToProject> TaskLinkedToProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskLinkedToProject>("Cricri371TimeManagerModel.FK_TLTP_ProjectID", "TaskLinkedToProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskLinkedToProject>("Cricri371TimeManagerModel.FK_TLTP_ProjectID", "TaskLinkedToProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cricri371TimeManagerModel", Name="TaskLinkedToProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskLinkedToProject : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet TaskLinkedToProject.
        /// </summary>
        /// <param name="iD_Project">Valeur initiale de la propriété ID_Project.</param>
        /// <param name="iD_Task">Valeur initiale de la propriété ID_Task.</param>
        /// <param name="iD_TaskLinkedToProject">Valeur initiale de la propriété ID_TaskLinkedToProject.</param>
        public static TaskLinkedToProject CreateTaskLinkedToProject(global::System.Int32 iD_Project, global::System.Int32 iD_Task, global::System.Int32 iD_TaskLinkedToProject)
        {
            TaskLinkedToProject taskLinkedToProject = new TaskLinkedToProject();
            taskLinkedToProject.ID_Project = iD_Project;
            taskLinkedToProject.ID_Task = iD_Task;
            taskLinkedToProject.ID_TaskLinkedToProject = iD_TaskLinkedToProject;
            return taskLinkedToProject;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Project
        {
            get
            {
                return _ID_Project;
            }
            set
            {
                OnID_ProjectChanging(value);
                ReportPropertyChanging("ID_Project");
                _ID_Project = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Project");
                OnID_ProjectChanged();
            }
        }
        private global::System.Int32 _ID_Project;
        partial void OnID_ProjectChanging(global::System.Int32 value);
        partial void OnID_ProjectChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Task
        {
            get
            {
                return _ID_Task;
            }
            set
            {
                OnID_TaskChanging(value);
                ReportPropertyChanging("ID_Task");
                _ID_Task = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Task");
                OnID_TaskChanged();
            }
        }
        private global::System.Int32 _ID_Task;
        partial void OnID_TaskChanging(global::System.Int32 value);
        partial void OnID_TaskChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_TaskLinkedToProject
        {
            get
            {
                return _ID_TaskLinkedToProject;
            }
            set
            {
                if (_ID_TaskLinkedToProject != value)
                {
                    OnID_TaskLinkedToProjectChanging(value);
                    ReportPropertyChanging("ID_TaskLinkedToProject");
                    _ID_TaskLinkedToProject = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_TaskLinkedToProject");
                    OnID_TaskLinkedToProjectChanged();
                }
            }
        }
        private global::System.Int32 _ID_TaskLinkedToProject;
        partial void OnID_TaskLinkedToProjectChanging(global::System.Int32 value);
        partial void OnID_TaskLinkedToProjectChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cricri371TimeManagerModel", "FK_TLTP_ProjectID", "Projects")]
        public Projects Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Projects>("Cricri371TimeManagerModel.FK_TLTP_ProjectID", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Projects>("Cricri371TimeManagerModel.FK_TLTP_ProjectID", "Projects").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Projects> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Projects>("Cricri371TimeManagerModel.FK_TLTP_ProjectID", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Projects>("Cricri371TimeManagerModel.FK_TLTP_ProjectID", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cricri371TimeManagerModel", "FK_PassedTime_TaskLinkedToProjectID", "PassedTimes")]
        public EntityCollection<PassedTimes> PassedTime
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PassedTimes>("Cricri371TimeManagerModel.FK_PassedTime_TaskLinkedToProjectID", "PassedTimes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PassedTimes>("Cricri371TimeManagerModel.FK_PassedTime_TaskLinkedToProjectID", "PassedTimes", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cricri371TimeManagerModel", "FK_TLP_TaskID", "Tasks")]
        public Tasks Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tasks>("Cricri371TimeManagerModel.FK_TLP_TaskID", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tasks>("Cricri371TimeManagerModel.FK_TLP_TaskID", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tasks> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tasks>("Cricri371TimeManagerModel.FK_TLP_TaskID", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tasks>("Cricri371TimeManagerModel.FK_TLP_TaskID", "Tasks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cricri371TimeManagerModel", Name="Tasks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tasks : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Tasks.
        /// </summary>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        /// <param name="iD_Task">Valeur initiale de la propriété ID_Task.</param>
        public static Tasks CreateTasks(global::System.String name, global::System.Int32 iD_Task)
        {
            Tasks tasks = new Tasks();
            tasks.Name = name;
            tasks.ID_Task = iD_Task;
            return tasks;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Task
        {
            get
            {
                return _ID_Task;
            }
            set
            {
                if (_ID_Task != value)
                {
                    OnID_TaskChanging(value);
                    ReportPropertyChanging("ID_Task");
                    _ID_Task = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_Task");
                    OnID_TaskChanged();
                }
            }
        }
        private global::System.Int32 _ID_Task;
        partial void OnID_TaskChanging(global::System.Int32 value);
        partial void OnID_TaskChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cricri371TimeManagerModel", "FK_TLP_TaskID", "TaskLinkedToProject")]
        public EntityCollection<TaskLinkedToProject> TaskLinkedToProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskLinkedToProject>("Cricri371TimeManagerModel.FK_TLP_TaskID", "TaskLinkedToProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskLinkedToProject>("Cricri371TimeManagerModel.FK_TLP_TaskID", "TaskLinkedToProject", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
